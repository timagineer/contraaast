const WCAG_AAA_MIN_CONTRAST=7.0;const MAX_CONTRAST=21.0;const STORAGE_KEY='contraaastStats';let currentStats={runs:0,highScore:0};const elements={color1:document.getElementById('color1'),color2:document.getElementById('color2'),ratio:document.getElementById('ratio'),invertBtn:document.getElementById('invert'),runBtn:document.getElementById('run'),copyBtn:document.getElementById('copy'),noOfRuns:document.getElementById('no-of-runs'),highScore:document.getElementById('high-score'),showBtn:document.getElementById("info"),closeBtn:document.getElementById("close"),dialog:document.getElementById("dialog"),titleSpan:document.querySelector("h1 span")};const colorCanvas=document.createElement('canvas');colorCanvas.width=1;colorCanvas.height=1;const colorCtx=colorCanvas.getContext('2d');function closeDialogSmoothly(dialog){if(!dialog)return;dialog.classList.add('closing');const computedStyle=getComputedStyle(dialog);const duration=parseFloat(computedStyle.transitionDuration)*1000||240;setTimeout(()=>{dialog.close();dialog.classList.remove('closing')},duration)}
function loadStats(){try{const savedStats=localStorage.getItem(STORAGE_KEY);if(savedStats){currentStats=JSON.parse(savedStats);updateStatsDisplay()}}catch(e){console.error("Error parsing saved stats:",e);saveStats()}}
function saveStats(){try{localStorage.setItem(STORAGE_KEY,JSON.stringify(currentStats));updateStatsDisplay()}catch(e){console.error("Error saving stats:",e)}}
function updateStatsDisplay(){if(elements.noOfRuns&&elements.highScore){if(currentStats.runs===0){elements.noOfRuns.textContent="0"}else{elements.noOfRuns.textContent=currentStats.runs.toLocaleString()}
if(currentStats.highScore===0){elements.highScore.textContent="##.#"}else if(currentStats.highScore>=21){elements.highScore.textContent="21!"}else{elements.highScore.textContent=currentStats.highScore.toFixed(1)}}}
function oklchToHex(oklchColor){try{colorCtx.fillStyle=oklchColor;colorCtx.fillRect(0,0,1,1);const imageData=colorCtx.getImageData(0,0,1,1).data;return `#${byteToHex(imageData[0])}${byteToHex(imageData[1])}${byteToHex(imageData[2])}`}catch(e){console.error("Error converting OKLCH to hex:",e);return"#000000"}}
function byteToHex(value){return('0'+(value||0).toString(16)).slice(-2)}
function parseOklch(oklchStr){try{const matches=oklchStr.match(/oklch\(([0-9.]+)\s+([0-9.]+)\s+([0-9]+)/);if(!matches||matches.length<4){console.error("Could not parse OKLCH color:",oklchStr);return{l:0.5,c:0.1,h:0}}
return{l:parseFloat(matches[1])||0.5,c:parseFloat(matches[2])||0.1,h:parseInt(matches[3])||0}}catch(e){console.error("Error parsing OKLCH:",e);return{l:0.5,c:0.1,h:0}}}
function formatOklch(l,c,h){const safeL=Math.max(0,Math.min(1,l||0.5));const safeC=Math.max(0,c||0.1);const safeH=Math.max(0,Math.min(360,h||0));return `oklch(${safeL.toFixed(2)} ${safeC.toFixed(4)} ${safeH.toFixed(2)})`}
function formatOklchDisplay(oklchStr){const{l,c,h}=parseOklch(oklchStr);return `${l.toFixed(2)} ${c.toFixed(4)} ${h.toFixed(2)}`}
function calculateContrastRatio(color1,color2){try{const lum1=getLuminance(color1);const lum2=getLuminance(color2);return lum1>lum2?(lum1+0.05)/(lum2+0.05):(lum2+0.05)/(lum1+0.05)}catch(e){console.error("Error calculating contrast ratio:",e);return WCAG_AAA_MIN_CONTRAST}}
function getLuminance(color){try{colorCtx.fillStyle=color;colorCtx.fillRect(0,0,1,1);const[r,g,b]=colorCtx.getImageData(0,0,1,1).data;const R=srgbToLinear(r/255);const G=srgbToLinear(g/255);const B=srgbToLinear(b/255);return 0.2126*R+0.7152*G+0.0722*B}catch(e){console.error("Error getting luminance:",e);return 0.5}}
function srgbToLinear(value){value=Math.max(0,Math.min(1,value||0));return value<=0.03928?value/12.92:Math.pow((value+0.055)/1.055,2.4)}
function initializeWithDefaultColors(){const prefersDark=window.matchMedia('(prefers-color-scheme: dark)').matches;const foreground=prefersDark?'oklch(1 0 0)':'oklch(0 0 0)';const background=prefersDark?'oklch(0 0 0)':'oklch(1 0 0)';updateUIWithColors(foreground,background,MAX_CONTRAST)}
function updateUIWithColors(foreground,background,contrastRatio){if(elements.color1)elements.color1.textContent=formatOklchDisplay(foreground);if(elements.color2)elements.color2.textContent=formatOklchDisplay(background);if(elements.ratio)elements.ratio.textContent=contrastRatio.toFixed(1);document.documentElement.style.setProperty('--color-1',foreground);document.documentElement.style.setProperty('--color-2',background)}
function randomInRange(min,max){min=Number(min)||0;max=Number(max)||1;return min+Math.random()*(max-min)}
function generateRandomOklchColor(){const l=randomInRange(0.1,0.9);const c=randomInRange(0.02,0.2);const h=Math.floor(Math.random()*360);return formatOklch(l,c,h)}
function generateOklchWithLightness(l){const c=randomInRange(0.02,0.2);const h=Math.floor(Math.random()*360);return formatOklch(l,c,h)}
function generateDiverseColorPair(targetMinContrast,targetMaxContrast,attempts=50){let bestPair=null;let bestContrast=0;targetMinContrast=Math.max(WCAG_AAA_MIN_CONTRAST,Number(targetMinContrast)||WCAG_AAA_MIN_CONTRAST);targetMaxContrast=Math.min(MAX_CONTRAST,Number(targetMaxContrast)||MAX_CONTRAST);attempts=Math.min(100,Math.max(10,Number(attempts)||50));for(let i=0;i<attempts;i++){const color1=generateRandomOklchColor();const color2=generateRandomOklchColor();const contrast=calculateContrastRatio(color1,color2);if(contrast>=targetMinContrast&&contrast<=targetMaxContrast){if(Math.random()<0.2){return{foreground:color1,background:color2,ratio:contrast}}else if(contrast>bestContrast){bestPair={foreground:color1,background:color2,ratio:contrast};bestContrast=contrast}}}
if(bestPair!==null){return bestPair}
return generateOptimizedContrastPair(randomInRange(targetMinContrast,targetMaxContrast))}
function generateOptimizedContrastPair(targetRatio){targetRatio=Math.max(WCAG_AAA_MIN_CONTRAST,Math.min(MAX_CONTRAST,Number(targetRatio)||WCAG_AAA_MIN_CONTRAST));const l1=randomInRange(0.1,0.9);const color1=generateOklchWithLightness(l1);const needsLight=l1<0.5;let l2Base;if(needsLight){l2Base=randomInRange(0.7,0.95)}else{l2Base=randomInRange(0.05,0.3)}
const color2=generateOklchWithLightness(l2Base);let actualRatio=calculateContrastRatio(color1,color2);return finetuneContrast(color1,color2,targetRatio,actualRatio)}
function finetuneContrast(color1,color2,targetRatio,currentRatio){const c1=parseOklch(color1);const c2=parseOklch(color2);const maxAttempts=15;let attempts=0;const tolerance=0.15;while(Math.abs(currentRatio-targetRatio)>tolerance&&attempts<maxAttempts&&currentRatio>=WCAG_AAA_MIN_CONTRAST&&currentRatio<=MAX_CONTRAST){attempts++;let toAdjust=c2;const adjustmentFactor=Math.min(0.05,Math.abs(currentRatio-targetRatio)/20);if(currentRatio<targetRatio){if(c1.l<c2.l){toAdjust.l=Math.min(0.98,toAdjust.l+adjustmentFactor)}else{toAdjust.l=Math.max(0.02,toAdjust.l-adjustmentFactor)}}else{if(c1.l<c2.l){toAdjust.l=Math.max(c1.l+0.1,toAdjust.l-adjustmentFactor)}else{toAdjust.l=Math.min(c1.l-0.1,toAdjust.l+adjustmentFactor)}}
const adjustedColor2=formatOklch(toAdjust.l,toAdjust.c,toAdjust.h);const newRatio=calculateContrastRatio(color1,adjustedColor2);if(Math.abs(newRatio-targetRatio)<Math.abs(currentRatio-targetRatio)&&newRatio>=WCAG_AAA_MIN_CONTRAST&&newRatio<=MAX_CONTRAST){color2=adjustedColor2;currentRatio=newRatio}else{break}}
const finalRatio=calculateContrastRatio(color1,color2);if(finalRatio<WCAG_AAA_MIN_CONTRAST||finalRatio>MAX_CONTRAST){return generateFallbackContrastPair()}
return{foreground:color1,background:color2,ratio:finalRatio}}
function generateFallbackContrastPair(){const useCoolDark=Math.random()>0.5;let foreground,background;if(useCoolDark){const coolHue=randomInRange(180,300);const warmHue=randomInRange(20,80);foreground=formatOklch(randomInRange(0.1,0.3),randomInRange(0.05,0.15),coolHue);background=formatOklch(randomInRange(0.7,0.9),randomInRange(0.05,0.15),warmHue)}else{const coolHue=randomInRange(180,300);const warmHue=randomInRange(20,80);foreground=formatOklch(randomInRange(0.1,0.3),randomInRange(0.05,0.15),warmHue);background=formatOklch(randomInRange(0.7,0.9),randomInRange(0.05,0.15),coolHue)}
const ratio=calculateContrastRatio(foreground,background);if(ratio<WCAG_AAA_MIN_CONTRAST||ratio>MAX_CONTRAST){console.warn("Fallback strategy failed to generate valid contrast, retrying...");return generateFallbackContrastPair()}
return{foreground,background,ratio}}
function generateColorPair(){const contrastRanges=[{min:7.0,max:10.0},{min:10.0,max:13.0},{min:13.0,max:17.0},{min:17.0,max:21.0}];const selectedRange=contrastRanges[Math.floor(Math.random()*contrastRanges.length)];try{const useDirectStrategy=Math.random()>0.5;if(useDirectStrategy){const colorPair=generateDiverseColorPair(selectedRange.min,selectedRange.max);if(colorPair.ratio<WCAG_AAA_MIN_CONTRAST||colorPair.ratio>MAX_CONTRAST){console.warn("Direct strategy failed to generate valid contrast, using fallback");return generateFallbackContrastPair()}
return colorPair}else{const targetRatio=randomInRange(selectedRange.min,selectedRange.max);const colorPair=generateOptimizedContrastPair(targetRatio);if(colorPair.ratio<WCAG_AAA_MIN_CONTRAST||colorPair.ratio>MAX_CONTRAST){console.warn("Optimized strategy failed to generate valid contrast, using fallback");return generateFallbackContrastPair()}
return colorPair}}catch(e){console.error("Error generating color pair:",e);return generateFallbackContrastPair()}}
function updateColorDisplay(colorPair){if(!colorPair){console.error("No color pair provided to updateColorDisplay");return}
updateUIWithColors(colorPair.foreground,colorPair.background,colorPair.ratio);currentStats.runs++;if(colorPair.ratio>currentStats.highScore){currentStats.highScore=Math.min(colorPair.ratio,21.0);if(colorPair.ratio>=21.0){console.log("MAXIMUM SCORE: 21!!!")}else{console.log(`New high score: ${colorPair.ratio.toFixed(1)}!`)}}
saveStats()}
function swapColors(){const foregroundStr=getComputedStyle(document.documentElement).getPropertyValue('--color-1').trim();const backgroundStr=getComputedStyle(document.documentElement).getPropertyValue('--color-2').trim();if(!foregroundStr||!backgroundStr){const fgDisplay=elements.color1?.textContent;const bgDisplay=elements.color2?.textContent;if(!fgDisplay||!bgDisplay){console.error("Could not get color values for swapping");return}
const[fgL,fgC,fgH]=fgDisplay.split(' ');const[bgL,bgC,bgH]=bgDisplay.split(' ');const foreground=`oklch(${fgL} ${fgC} ${fgH})`;const background=`oklch(${bgL} ${bgC} ${bgH})`;const ratio=parseFloat(elements.ratio?.textContent||"7.0");updateUIWithColors(background,foreground,ratio)}else{const ratio=parseFloat(elements.ratio?.textContent||"7.0");updateUIWithColors(backgroundStr,foregroundStr,ratio)}}
function copyColorInfo(){try{const foregroundStr=getComputedStyle(document.documentElement).getPropertyValue('--color-1').trim();const backgroundStr=getComputedStyle(document.documentElement).getPropertyValue('--color-2').trim();const ratio=elements.ratio?.textContent;let foreground,background;if(!foregroundStr||!backgroundStr){const fgDisplay=elements.color1?.textContent;const bgDisplay=elements.color2?.textContent;if(!fgDisplay||!bgDisplay){console.error("Could not get color values for copying");return}
const[fgL,fgC,fgH]=fgDisplay.split(' ');const[bgL,bgC,bgH]=bgDisplay.split(' ');foreground=`oklch(${fgL} ${fgC} ${fgH})`;background=`oklch(${bgL} ${bgC} ${bgH})`}else{foreground=foregroundStr;background=backgroundStr}
const foregroundHex=oklchToHex(foreground);const backgroundHex=oklchToHex(background);const cssText=`:where(html) {
  /* CONTRAAAST  - WCAG AAA high contrast color-pairs */
  /* https://contraaast.timagineer.com */
  /* Contrast Ratio: ${ratio} */
  --_color-foreground: var(--color-1, ${foreground}, ${foregroundHex});
  --_color-background: var(--color-2, ${background}, ${backgroundHex});
}`;navigator.clipboard.writeText(cssText).then(()=>{const copyIcon=elements.copyBtn?.querySelector("use");if(copyIcon){const originalXlink=copyIcon.getAttribute("href");copyIcon.classList.add('c-icon-fade-out');setTimeout(()=>{copyIcon.setAttribute("href","#icon-check");copyIcon.classList.remove('c-icon-fade-out');copyIcon.classList.add('c-icon-fade-in');setTimeout(()=>{copyIcon.classList.remove('c-icon-fade-in');copyIcon.classList.add('c-icon-fade-out');setTimeout(()=>{copyIcon.setAttribute("href",originalXlink);copyIcon.classList.remove('c-icon-fade-out');copyIcon.classList.add('c-icon-fade-in');setTimeout(()=>{copyIcon.classList.remove('c-icon-fade-in')},360)},240)},1000)},240)}}).catch(err=>{console.error("Failed to copy text: ",err)})}catch(e){console.error("Error copying color info:",e)}}
function initialize(){try{loadStats();updateStatsDisplay();if(elements.invertBtn){elements.invertBtn.addEventListener('click',swapColors)}
if(elements.runBtn){elements.runBtn.addEventListener('click',()=>{const colorPair=generateColorPair();updateColorDisplay(colorPair)})}
if(elements.copyBtn){elements.copyBtn.addEventListener('click',copyColorInfo)}
if(elements.showBtn&&elements.dialog){elements.showBtn.addEventListener("click",()=>{elements.dialog.showModal()})}
if(elements.closeBtn&&elements.dialog){elements.closeBtn.addEventListener("click",()=>{closeDialogSmoothly(elements.dialog)})}
if(elements.dialog){elements.dialog.addEventListener("cancel",(e)=>{e.preventDefault();closeDialogSmoothly(elements.dialog)})}
window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change',initializeWithDefaultColors);initializeWithDefaultColors()}catch(e){console.error("Error initializing application:",e)}}
if(document.readyState==='interactive'||document.readyState==='complete'){initialize()}else{document.addEventListener('DOMContentLoaded',initialize)}
